#include "draw.h"

double la=.5, lb=.5;
double a=.5, b=.5;
double cursorX=.5, cursorY=.5;

double lineLife = 0;
double line_X = 0;
double line_Y = 0;



#define DRAW_SAMPLE 372
double p1x[DRAW_SAMPLE];
double p1y[DRAW_SAMPLE];
double p2x[DRAW_SAMPLE];
double p2y[DRAW_SAMPLE];
double p3x[DRAW_SAMPLE];
double p3y[DRAW_SAMPLE];
double p4x[DRAW_SAMPLE];
double p4y[DRAW_SAMPLE];
/*
float curveColorR = 0.8;
float curveColorG = 1;
float curveColorB = 1;
float backGroundColorR = 0.0;
float backGroundColorG = 0.2;
float backGroundColorB = 0.2;
*/

float curveColorR = 0;
float curveColorG = 1;
float curveColorB = 0;
float cursorCurveColorR = .2;
float cursorCurveColorG = .6;
float cursorCurveColorB = .2;
float backGroundColorR = 0.0;
float backGroundColorG = 0.1;
float backGroundColorB = 0.0;

/*
float curveColorR = 0;
float curveColorG = 0;
float curveColorB = 1;
float backGroundColorR = 0.0;
float backGroundColorG = 0.0;
float backGroundColorB = 0.0;
*/

void draw_init(){
    //glClearColor(1.0f, 1.0f, 1.0f, 1.0f);

    glEnable(GL_BLEND);
    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
    glEnable(GL_LINE_SMOOTH);
    glHint(GL_LINE_SMOOTH_HINT, GL_NICEST);

    double delta = 2*M_PI/DRAW_SAMPLE;

    for(int i = 0; i < DRAW_SAMPLE; i++){
        double t = (i)*delta-M_PI;
        //curve1
        p1x[i] = (sqrt(2) * cos(t) / (sin(t)*sin(t) + 1)) * 2 / 10;
        p1y[i] = (sqrt(2) * cos(t) * sin(t) / (sin(t)*sin(t) + 1)) * 2 / 10;
        //curve2
        p2x[i] = (2 * cos(t) + cos(2*t)) / 10;
        p2y[i] = (2 * sin(t) - sin(2*t)) / 10;
        //curve3
        p3x[i] = ((exp(cos(t)) - 2 * cos(4 * t)) * cos(t) ) / 10;
        p3y[i] = ((exp(cos(t)) - 2 * cos(4 * t)) * sin(t) ) / 10;
        //curve4
        /*p4x[i] = 0 * ( cos(t) ) * 4 / 10;
        p4y[i] = 0 * ( sin(t) ) * 4 / 10;*/
p4x[0] = -0.264339 - 0.00001;
p4y[0] = 0.147132 - 0.00001;
p4x[1] = -0.264339;
p4y[1] = 0.147132;
p4x[2] = -0.216958;
p4y[2] = 0.134663;
p4x[3] = -0.214464;
p4y[3] = 0.112219;
p4x[4] = -0.226933;
p4y[4] = 0.094763;
p4x[5] = -0.264339;
p4y[5] = 0.084788;
p4x[6] = -0.316708;
p4y[6] = 0.112219;
p4x[7] = -0.326683;
p4y[7] = 0.159601;
p4x[8] = -0.314214;
p4y[8] = 0.197007;
p4x[9] = -0.289277;
p4y[9] = 0.214464;
p4x[10] = -0.256858;
p4y[10] = 0.224439;
p4x[11] = -0.199501;
p4y[11] = 0.224439;
p4x[12] = -0.189526;
p4y[12] = 0.216958;
p4x[13] = -0.187032;
p4y[13] = 0.211970;
p4x[14] = -0.211970;
p4y[14] = 0.219451;
p4x[15] = -0.256858;
p4y[15] = 0.224439;
p4x[16] = -0.296758;
p4y[16] = 0.206983;
p4x[17] = -0.314214;
p4y[17] = 0.172070;
p4x[18] = -0.319202;
p4y[18] = 0.119701;
p4x[19] = -0.311721;
p4y[19] = 0.104738;
p4x[20] = -0.274314;
p4y[20] = 0.087282;
p4x[21] = -0.271820;
p4y[21] = 0.082294;
p4x[22] = -0.127182;
p4y[22] = 0.077307;
p4x[23] = -0.127182;
p4y[23] = 0.102244;
p4x[24] = -0.127182;
p4y[24] = 0.122195;
p4x[25] = -0.124688;
p4y[25] = 0.129676;
p4x[26] = -0.127182;
p4y[26] = 0.117207;
p4x[27] = -0.127182;
p4y[27] = 0.109726;
p4x[28] = -0.122195;
p4y[28] = 0.114713;
p4x[29] = -0.112219;
p4y[29] = 0.122195;
p4x[30] = -0.094763;
p4y[30] = 0.122195;
p4x[31] = -0.092269;
p4y[31] = 0.119701;
p4x[32] = -0.089776;
p4y[32] = 0.114713;
p4x[33] = -0.089776;
p4y[33] = 0.119701;
p4x[34] = -0.102244;
p4y[34] = 0.119701;
p4x[35] = -0.114713;
p4y[35] = 0.114713;
p4x[36] = -0.119701;
p4y[36] = 0.099751;
p4x[37] = -0.127182;
p4y[37] = 0.072319;
p4x[38] = -0.049875;
p4y[38] = 0.069825;
p4x[39] = -0.022444;
p4y[39] = 0.077307;
p4x[40] = 0.002494;
p4y[40] = 0.077307;
p4x[41] = 0.007481;
p4y[41] = 0.089776;
p4x[42] = 0.004988;
p4y[42] = 0.109726;
p4x[43] = -0.002494;
p4y[43] = 0.119701;
p4x[44] = -0.012469;
p4y[44] = 0.124688;
p4x[45] = -0.029925;
p4y[45] = 0.124688;
p4x[46] = -0.037406;
p4y[46] = 0.104738;
p4x[47] = -0.034913;
p4y[47] = 0.092269;
p4x[48] = -0.017456;
p4y[48] = 0.077307;
p4x[49] = -0.009975;
p4y[49] = 0.074813;
p4x[50] = 0.004988;
p4y[50] = 0.082294;
p4x[51] = 0.007481;
p4y[51] = 0.107232;
p4x[52] = 0.012469;
p4y[52] = 0.127182;
p4x[53] = 0.002494;
p4y[53] = 0.084788;
p4x[54] = 0.014963;
p4y[54] = 0.072319;
p4x[55] = 0.037406;
p4y[55] = 0.069825;
p4x[56] = 0.039900;
p4y[56] = 0.069825;
p4x[57] = 0.042394;
p4y[57] = 0.084788;
p4x[58] = 0.044888;
p4y[58] = 0.104738;
p4x[59] = 0.057357;
p4y[59] = 0.114713;
p4x[60] = 0.062344;
p4y[60] = 0.114713;
p4x[61] = 0.072319;
p4y[61] = 0.114713;
p4x[62] = 0.087282;
p4y[62] = 0.097257;
p4x[63] = 0.087282;
p4y[63] = 0.097257;
p4x[64] = 0.077307;
p4y[64] = 0.109726;
p4x[65] = 0.057357;
p4y[65] = 0.109726;
p4x[66] = 0.052369;
p4y[66] = 0.107232;
p4x[67] = 0.042394;
p4y[67] = 0.079800;
p4x[68] = 0.047382;
p4y[68] = 0.069825;
p4x[69] = 0.059850;
p4y[69] = 0.062344;
p4x[70] = 0.072319;
p4y[70] = 0.062344;
p4x[71] = 0.094763;
p4y[71] = 0.064838;
p4x[72] = 0.112219;
p4y[72] = 0.062344;
p4x[73] = 0.122195;
p4y[73] = 0.062344;
p4x[74] = 0.132170;
p4y[74] = 0.087282;
p4x[75] = 0.132170;
p4y[75] = 0.107232;
p4x[76] = 0.129676;
p4y[76] = 0.109726;
p4x[77] = 0.124688;
p4y[77] = 0.139651;
p4x[78] = 0.124688;
p4y[78] = 0.147132;
p4x[79] = 0.132170;
p4y[79] = 0.144638;
p4x[80] = 0.129676;
p4y[80] = 0.137157;
p4x[81] = 0.127182;
p4y[81] = 0.137157;
p4x[82] = 0.127182;
p4y[82] = 0.147132;
p4x[83] = 0.127182;
p4y[83] = 0.064838;
p4x[84] = 0.149626;
p4y[84] = 0.069825;
p4x[85] = 0.152120;
p4y[85] = 0.072319;
p4x[86] = 0.192020;
p4y[86] = 0.069825;
p4x[87] = 0.214464;
p4y[87] = 0.069825;
p4x[88] = 0.224439;
p4y[88] = 0.077307;
p4x[89] = 0.224439;
p4y[89] = 0.109726;
p4x[90] = 0.224439;
p4y[90] = 0.117207;
p4x[91] = 0.197007;
p4y[91] = 0.122195;
p4x[92] = 0.172070;
p4y[92] = 0.112219;
p4x[93] = 0.169576;
p4y[93] = 0.089776;
p4x[94] = 0.184539;
p4y[94] = 0.072319;
p4x[95] = 0.199501;
p4y[95] = 0.069825;
p4x[96] = 0.219451;
p4y[96] = 0.079800;
p4x[97] = 0.221945;
p4y[97] = 0.109726;
p4x[98] = 0.226933;
p4y[98] = 0.122195;
p4x[99] = 0.224439;
p4y[99] = 0.117207;
p4x[100] = 0.219451;
p4y[100] = 0.079800;
p4x[101] = 0.226933;
p4y[101] = 0.064838;
p4x[102] = 0.234414;
p4y[102] = 0.064838;
p4x[103] = 0.249377;
p4y[103] = 0.064838;
p4x[104] = 0.279302;
p4y[104] = 0.062344;
p4x[105] = 0.284289;
p4y[105] = 0.062344;
p4x[106] = 0.299252;
p4y[106] = 0.067332;
p4x[107] = 0.301746;
p4y[107] = 0.077307;
p4x[108] = 0.299252;
p4y[108] = 0.089776;
p4x[109] = 0.279302;
p4y[109] = 0.097257;
p4x[110] = 0.276808;
p4y[110] = 0.099751;
p4x[111] = 0.276808;
p4y[111] = 0.117207;
p4x[112] = 0.281796;
p4y[112] = 0.127182;
p4x[113] = 0.299252;
p4y[113] = 0.132170;
p4x[114] = 0.306733;
p4y[114] = 0.132170;
p4x[115] = 0.281796;
p4y[115] = 0.127182;
p4x[116] = 0.276808;
p4y[116] = 0.124688;
p4x[117] = 0.281796;
p4y[117] = 0.102244;
p4x[118] = 0.296758;
p4y[118] = 0.092269;
p4x[119] = 0.299252;
p4y[119] = 0.074813;
p4x[120] = 0.291771;
p4y[120] = 0.062344;
p4x[121] = 0.286783;
p4y[121] = 0.059850;
p4x[122] = 0.316708;
p4y[122] = 0.059850;
p4x[123] = -0.269327;
p4y[123] = 0.082294;
p4x[124] = -0.458853;
p4y[124] = 0.072319;
p4x[125] = -0.448878;
p4y[125] = -0.124688;
p4x[126] = -0.239401;
p4y[126] = -0.119701;
p4x[127] = -0.239401;
p4y[127] = -0.119701;
p4x[128] = -0.286783;
p4y[128] = -0.107232;
p4x[129] = -0.291771;
p4y[129] = -0.104738;
p4x[130] = -0.296758;
p4y[130] = -0.082294;
p4x[131] = -0.289277;
p4y[131] = -0.042394;
p4x[132] = -0.271820;
p4y[132] = -0.024938;
p4x[133] = -0.259352;
p4y[133] = -0.022444;
p4x[134] = -0.234414;
p4y[134] = -0.027431;
p4x[135] = -0.219451;
p4y[135] = -0.044888;
p4x[136] = -0.229426;
p4y[136] = -0.029925;
p4x[137] = -0.251870;
p4y[137] = -0.024938;
p4x[138] = -0.274314;
p4y[138] = -0.024938;
p4x[139] = -0.286783;
p4y[139] = -0.044888;
p4x[140] = -0.286783;
p4y[140] = -0.082294;
p4x[141] = -0.276808;
p4y[141] = -0.104738;
p4x[142] = -0.256858;
p4y[142] = -0.119701;
p4x[143] = -0.244389;
p4y[143] = -0.124688;
p4x[144] = -0.229426;
p4y[144] = -0.124688;
p4x[145] = -0.214464;
p4y[145] = -0.122195;
p4x[146] = -0.194514;
p4y[146] = -0.122195;
p4x[147] = -0.177057;
p4y[147] = -0.122195;
p4x[148] = -0.167082;
p4y[148] = -0.122195;
p4x[149] = -0.149626;
p4y[149] = -0.119701;
p4x[150] = -0.134663;
p4y[150] = -0.099751;
p4x[151] = -0.134663;
p4y[151] = -0.077307;
p4x[152] = -0.147132;
p4y[152] = -0.064838;
p4x[153] = -0.167082;
p4y[153] = -0.064838;
p4x[154] = -0.177057;
p4y[154] = -0.084788;
p4x[155] = -0.172070;
p4y[155] = -0.114713;
p4x[156] = -0.149626;
p4y[156] = -0.124688;
p4x[157] = -0.144638;
p4y[157] = -0.109726;
p4x[158] = -0.142145;
p4y[158] = -0.089776;
p4x[159] = -0.139651;
p4y[159] = -0.117207;
p4x[160] = -0.137157;
p4y[160] = -0.117207;
p4x[161] = -0.122195;
p4y[161] = -0.117207;
p4x[162] = -0.117207;
p4y[162] = -0.117207;
p4x[163] = -0.112219;
p4y[163] = -0.117207;
p4x[164] = -0.107232;
p4y[164] = -0.114713;
p4x[165] = -0.102244;
p4y[165] = -0.097257;
p4x[166] = -0.104738;
p4y[166] = -0.067332;
p4x[167] = -0.104738;
p4y[167] = -0.057357;
p4x[168] = -0.104738;
p4y[168] = -0.124688;
p4x[169] = -0.102244;
p4y[169] = -0.069825;
p4x[170] = -0.089776;
p4y[170] = -0.064838;
p4x[171] = -0.074813;
p4y[171] = -0.062344;
p4x[172] = -0.067332;
p4y[172] = -0.094763;
p4x[173] = -0.064838;
p4y[173] = -0.107232;
p4x[174] = -0.062344;
p4y[174] = -0.117207;
p4x[175] = -0.062344;
p4y[175] = -0.102244;
p4x[176] = -0.062344;
p4y[176] = -0.077307;
p4x[177] = -0.054863;
p4y[177] = -0.064838;
p4x[178] = -0.042394;
p4y[178] = -0.059850;
p4x[179] = -0.027431;
p4y[179] = -0.057357;
p4x[180] = -0.017456;
p4y[180] = -0.082294;
p4x[181] = -0.017456;
p4y[181] = -0.099751;
p4x[182] = -0.017456;
p4y[182] = -0.112219;
p4x[183] = -0.014963;
p4y[183] = -0.117207;
p4x[184] = 0.004988;
p4y[184] = -0.119701;
p4x[185] = -0.099751;
p4y[185] = -0.117207;
p4x[186] = 0.024938;
p4y[186] = -0.117207;
p4x[187] = 0.022444;
p4y[187] = -0.054863;
p4x[188] = 0.024938;
p4y[188] = -0.211970;
p4x[189] = 0.022444;
p4y[189] = -0.059850;
p4x[190] = 0.037406;
p4y[190] = -0.054863;
p4x[191] = 0.059850;
p4y[191] = -0.067332;
p4x[192] = 0.069825;
p4y[192] = -0.082294;
p4x[193] = 0.069825;
p4y[193] = -0.102244;
p4x[194] = 0.054863;
p4y[194] = -0.109726;
p4x[195] = 0.022444;
p4y[195] = -0.114713;
p4x[196] = 0.099751;
p4y[196] = -0.114713;
p4x[197] = 0.144638;
p4y[197] = -0.114713;
p4x[198] = 0.152120;
p4y[198] = -0.094763;
p4x[199] = 0.154613;
p4y[199] = -0.067332;
p4x[200] = 0.117207;
p4y[200] = -0.054863;
p4x[201] = 0.099751;
p4y[201] = -0.069825;
p4x[202] = 0.097257;
p4y[202] = -0.097257;
p4x[203] = 0.107232;
p4y[203] = -0.112219;
p4x[204] = 0.122195;
p4y[204] = -0.112219;
p4x[205] = 0.149626;
p4y[205] = -0.107232;
p4x[206] = 0.157107;
p4y[206] = -0.052369;
p4x[207] = 0.164589;
p4y[207] = -0.039900;
p4x[208] = 0.154613;
p4y[208] = -0.062344;
p4x[209] = 0.152120;
p4y[209] = -0.094763;
p4x[210] = 0.157107;
p4y[210] = -0.107232;
p4x[211] = 0.159601;
p4y[211] = -0.109726;
p4x[212] = 0.177057;
p4y[212] = -0.112219;
p4x[213] = 0.184539;
p4y[213] = -0.102244;
p4x[214] = 0.194514;
p4y[214] = -0.079800;
p4x[215] = 0.204489;
p4y[215] = -0.062344;
p4x[216] = 0.209476;
p4y[216] = -0.064838;
p4x[217] = 0.211970;
p4y[217] = -0.087282;
p4x[218] = 0.211970;
p4y[218] = -0.104738;
p4x[219] = 0.211970;
p4y[219] = -0.107232;
p4x[220] = 0.206983;
p4y[220] = -0.067332;
p4x[221] = 0.201995;
p4y[221] = -0.062344;
p4x[222] = 0.182045;
p4y[222] = -0.067332;
p4x[223] = 0.179551;
p4y[223] = -0.099751;
p4x[224] = 0.182045;
p4y[224] = -0.104738;
p4x[225] = 0.179551;
p4y[225] = -0.064838;
p4x[226] = 0.179551;
p4y[226] = -0.102244;
p4x[227] = 0.209476;
p4y[227] = -0.109726;
p4x[228] = 0.244389;
p4y[228] = -0.112219;
p4x[229] = 0.174564;
p4y[229] = -0.104738;
p4x[230] = 0.177057;
p4y[230] = -0.069825;
p4x[231] = 0.177057;
p4y[231] = -0.042394;
p4x[232] = 0.179551;
p4y[232] = -0.034913;
p4x[233] = 0.194514;
p4y[233] = -0.034913;
p4x[234] = 0.201995;
p4y[234] = -0.044888;
p4x[235] = 0.214464;
p4y[235] = -0.039900;
p4x[236] = 0.219451;
p4y[236] = -0.032419;
p4x[237] = 0.209476;
p4y[237] = -0.044888;
p4x[238] = 0.194514;
p4y[238] = -0.044888;
p4x[239] = 0.174564;
p4y[239] = -0.044888;
p4x[240] = 0.179551;
p4y[240] = -0.099751;
p4x[241] = 0.239401;
p4y[241] = -0.117207;
p4x[242] = 0.266833;
p4y[242] = -0.109726;
p4x[243] = 0.254364;
p4y[243] = -0.107232;
p4x[244] = 0.234414;
p4y[244] = -0.089776;
p4x[245] = 0.239401;
p4y[245] = -0.072319;
p4x[246] = 0.256858;
p4y[246] = -0.057357;
p4x[247] = 0.269327;
p4y[247] = -0.059850;
p4x[248] = 0.271820;
p4y[248] = -0.074813;
p4x[249] = 0.266833;
p4y[249] = -0.079800;
p4x[250] = 0.249377;
p4y[250] = -0.079800;
p4x[251] = 0.236908;
p4y[251] = -0.084788;
p4x[252] = 0.249377;
p4y[252] = -0.102244;
p4x[253] = 0.264339;
p4y[253] = -0.112219;
p4x[254] = 0.289277;
p4y[254] = -0.112219;
p4x[255] = 0.289277;
p4y[255] = -0.052369;
p4x[256] = 0.289277;
p4y[256] = -0.077307;
p4x[257] = 0.289277;
p4y[257] = -0.067332;
p4x[258] = 0.304239;
p4y[258] = -0.054863;
p4x[259] = 0.319202;
p4y[259] = -0.052369;
p4x[260] = 0.311721;
p4y[260] = -0.057357;
p4x[261] = 0.284289;
p4y[261] = -0.067332;
p4x[262] = 0.291771;
p4y[262] = -0.097257;
p4x[263] = 0.289277;
p4y[263] = -0.109726;
p4x[264] = 0.316708;
p4y[264] = -0.109726;
p4x[265] = 0.331671;
p4y[265] = -0.109726;
p4x[266] = 0.341646;
p4y[266] = -0.107232;
p4x[267] = 0.349127;
p4y[267] = -0.102244;
p4x[268] = 0.371571;
p4y[268] = -0.084788;
p4x[269] = 0.371571;
p4y[269] = -0.069825;
p4x[270] = 0.361596;
p4y[270] = -0.057357;
p4x[271] = 0.346633;
p4y[271] = -0.052369;
p4x[272] = 0.334165;
p4y[272] = -0.064838;
p4x[273] = 0.331671;
p4y[273] = -0.087282;
p4x[274] = 0.339152;
p4y[274] = -0.102244;
p4x[275] = 0.346633;
p4y[275] = -0.102244;
p4x[276] = 0.366584;
p4y[276] = -0.104738;
p4x[277] = 0.389027;
p4y[277] = -0.109726;
p4x[278] = 0.408978;
p4y[278] = -0.107232;
p4x[279] = 0.408978;
p4y[279] = -0.097257;
p4x[280] = 0.391521;
p4y[280] = -0.087282;
p4x[281] = 0.389027;
p4y[281] = -0.079800;
p4x[282] = 0.384040;
p4y[282] = -0.067332;
p4x[283] = 0.406484;
p4y[283] = -0.052369;
p4x[284] = 0.413965;
p4y[284] = -0.052369;
p4x[285] = 0.391521;
p4y[285] = -0.057357;
p4x[286] = 0.384040;
p4y[286] = -0.077307;
p4x[287] = 0.396509;
p4y[287] = -0.084788;
p4x[288] = 0.411471;
p4y[288] = -0.104738;
p4x[289] = 0.403990;
p4y[289] = -0.114713;
p4x[290] = 0.314214;
p4y[290] = -0.107232;
p4x[291] = -0.446384;
p4y[291] = -0.132170;
p4x[292] = -0.448878;
p4y[292] = -0.289277;
p4x[293] = 0.112219;
p4y[293] = -0.261845;
p4x[294] = 0.107232;
p4y[294] = -0.194514;
p4x[295] = 0.112219;
p4y[295] = -0.216958;
p4x[296] = 0.094763;
p4y[296] = -0.214464;
p4x[297] = 0.132170;
p4y[297] = -0.214464;
p4x[298] = 0.112219;
p4y[298] = -0.216958;
p4x[299] = 0.109726;
p4y[299] = -0.249377;
p4x[300] = 0.154613;
p4y[300] = -0.259352;
p4x[301] = 0.174564;
p4y[301] = -0.249377;
p4x[302] = 0.172070;
p4y[302] = -0.229426;
p4x[303] = 0.159601;
p4y[303] = -0.226933;
p4x[304] = 0.152120;
p4y[304] = -0.236908;
p4x[305] = 0.154613;
p4y[305] = -0.256858;
p4x[306] = 0.167082;
p4y[306] = -0.256858;
p4x[307] = 0.177057;
p4y[307] = -0.229426;
p4x[308] = 0.174564;
p4y[308] = -0.256858;
p4x[309] = 0.192020;
p4y[309] = -0.256858;
p4x[310] = 0.206983;
p4y[310] = -0.249377;
p4x[311] = 0.216958;
p4y[311] = -0.234414;
p4x[312] = 0.231920;
p4y[312] = -0.229426;
p4x[313] = 0.221945;
p4y[313] = -0.229426;
p4x[314] = 0.199501;
p4y[314] = -0.244389;
p4x[315] = 0.214464;
p4y[315] = -0.254364;
p4x[316] = 0.219451;
p4y[316] = -0.254364;
p4x[317] = 0.236908;
p4y[317] = -0.187032;
p4x[318] = 0.226933;
p4y[318] = -0.246883;
p4x[319] = 0.239401;
p4y[319] = -0.251870;
p4x[320] = 0.256858;
p4y[320] = -0.249377;
p4x[321] = 0.271820;
p4y[321] = -0.241895;
p4x[322] = 0.271820;
p4y[322] = -0.224439;
p4x[323] = 0.249377;
p4y[323] = -0.221945;
p4x[324] = 0.236908;
p4y[324] = -0.246883;
p4x[325] = 0.256858;
p4y[325] = -0.249377;
p4x[326] = 0.281796;
p4y[326] = -0.224439;
p4x[327] = 0.274314;
p4y[327] = -0.249377;
p4x[328] = 0.299252;
p4y[328] = -0.254364;
p4x[329] = 0.346633;
p4y[329] = -0.249377;
p4x[330] = 0.346633;
p4y[330] = -0.236908;
p4x[331] = 0.329177;
p4y[331] = -0.229426;
p4x[332] = 0.319202;
p4y[332] = -0.219451;
p4x[333] = 0.339152;
p4y[333] = -0.206983;
p4x[334] = 0.346633;
p4y[334] = -0.204489;
p4x[335] = 0.311721;
p4y[335] = -0.216958;
p4x[336] = 0.339152;
p4y[336] = -0.231920;
p4x[337] = 0.341646;
p4y[337] = -0.244389;
p4x[338] = 0.326683;
p4y[338] = -0.256858;
p4x[339] = 0.366584;
p4y[339] = -0.256858;
p4x[340] = 0.364090;
p4y[340] = -0.204489;
p4x[341] = 0.361596;
p4y[341] = -0.229426;
p4x[342] = 0.376559;
p4y[342] = -0.229426;
p4x[343] = 0.384040;
p4y[343] = -0.234414;
p4x[344] = 0.384040;
p4y[344] = -0.251870;
p4x[345] = 0.389027;
p4y[345] = -0.256858;
p4x[346] = 0.403990;
p4y[346] = -0.256858;
p4x[347] = 0.418953;
p4y[347] = -0.254364;
p4x[348] = 0.418953;
p4y[348] = -0.234414;
p4x[349] = 0.418953;
p4y[349] = -0.231920;
p4x[350] = 0.418953;
p4y[350] = -0.254364;
p4x[351] = 0.433915;
p4y[351] = -0.259352;
p4x[352] = 0.436409;
p4y[352] = -0.261845;
p4x[353] = 0.418953;
p4y[353] = -0.254364;
p4x[354] = 0.423940;
p4y[354] = -0.211970;
p4x[355] = 0.423940;
p4y[355] = -0.201995;
p4x[356] = 0.408978;
p4y[356] = -0.201995;
p4x[357] = 0.436409;
p4y[357] = -0.199501;
p4x[358] = 0.423940;
p4y[358] = -0.206983;
p4x[359] = 0.416459;
p4y[359] = -0.251870;
p4x[360] = 0.443890;
p4y[360] = -0.259352;
p4x[361] = 0.486284;
p4y[361] = -0.097257;
p4x[362] = 0.406484;
p4y[362] = -0.112219;
p4x[363] = 0.488778;
p4y[363] = -0.097257;
p4x[364] = 0.493766;
p4y[364] = 0.077307;
p4x[365] = 0.319202;
p4y[365] = 0.064838;
p4x[366] = 0.501247;
p4y[366] = 0.079800;
p4x[367] = 0.496259;
p4y[367] = 0.289277;
p4x[368] = -0.498753;
p4y[368] = 0.276808;
p4x[369] = -0.463840;
p4y[369] = 0.064838;
p4x[370] = -0.2;
p4y[370] = 0.1;
p4x[371] = -.25;
p4y[371] = 0.15;

    }



    glClear(GL_ACCUM_BUFFER_BIT);
}

void generateLine(double x, double y){
    line_X = x;
    line_Y = y;
    lineLife = 1;
}

void setCursor(double x, double y){
    cursorX = x; cursorY = y;
}

void drawCursor(double x, double y){
    glLineWidth(1.0);
    glColor4f(curveColorR,curveColorG,curveColorB,1);
    glBegin(GL_LINES);
        glVertex2f(x,y);
        glVertex2f(x,y-.075);
        glVertex2f(x,y);
        glVertex2f(x+.04,y-0.06);
        glVertex2f(x,y-.075);
        glVertex2f(x+.04,y-0.06);
    glEnd();
}

void drawLine(float x1, float y1, float x2, float y2){
    glColor4f(curveColorR,curveColorG,curveColorB,1);
    glBegin(GL_LINES);
        glVertex2f(x1,y1);
        glVertex2f(x2,y2);
    glEnd();
}
/*
double px1(double t){ return (sqrt(2) * cos(t) / (sin(t)*sin(t) + 1)) * 2 / 10; }
double py1(double t){ return (sqrt(2) * cos(t) * sin(t) / (sin(t)*sin(t) + 1)) * 2 / 10; }

double px2(double t){ return (2 * cos(t) + cos(2*t)) / 10; }
double py2(double t){ return (2 * sin(t) - sin(2*t)) / 10; }

double px3(double t){ return ( (exp(cos(t)) - 2 * cos(4 * t)) * cos(t) ) / 10; }
double py3(double t){ return ( (exp(cos(t)) - 2 * cos(4 * t)) * sin(t) ) / 10; }

double px4(double t){ return ( cos(t) ) * 4 / 10; }
double py4(double t){ return ( sin(t) ) * 4 / 10; }
*/
double xx(int t){ return ( p1x[t] * (b-.5) + p2x[t] * (b+.5) )*(a-.5) + ( p3x[t] * (b-.5) + p4x[t] * (b+.5) )*(a+.5); }
double yy(int t){ return ( p1y[t] * (b-.5) + p2y[t] * (b+.5) )*(a-.5) + ( p3y[t] * (b-.5) + p4y[t] * (b+.5) )*(a+.5); }

void draw(){


    glClearColor(backGroundColorR, backGroundColorG, backGroundColorB, 255);
    glClear(GL_COLOR_BUFFER_BIT);

    //glAccum(GL_RETURN, .3);


    double beta = .1;




    // Surface
    for(int t = 0; t < DRAW_SAMPLE; t++){
        glBegin(GL_QUADS);
            //l1

            glColor4f(curveColorR, curveColorG, curveColorB, .08);
            a = la;
            b = lb;
            glVertex2f(xx(t),yy(t));
            glVertex2f(xx((t+1)%DRAW_SAMPLE),yy((t+1)%DRAW_SAMPLE));
            glColor4f(curveColorR, curveColorG, curveColorB, 0);
            a = cursorX+beta;
            b = cursorY+beta;
            glVertex2f(xx((t+1)%DRAW_SAMPLE),yy((t+1)%DRAW_SAMPLE));
            glVertex2f(xx(t),yy(t));

            //l2
            glColor4f(curveColorR, curveColorG, curveColorB, .08);
            a = la;
            b = lb;
            glVertex2f(xx((t+1)%DRAW_SAMPLE),yy((t+1)%DRAW_SAMPLE));
            glVertex2f(xx(t),yy(t));
            glColor4f(curveColorR, curveColorG, curveColorB, 0);
            a = (la - cursorX)*.5+la-beta;
            b = (lb - cursorY)*.5+lb-beta;
            glVertex2f(xx(t),yy(t));
            glVertex2f(xx((t+1)%DRAW_SAMPLE),yy((t+1)%DRAW_SAMPLE));
        glEnd();
    }

    //cursor

    if(lineLife > 0){
        // LifeCurve

        glLineWidth(2.0);
        glColor4f(cursorCurveColorR, cursorCurveColorG, cursorCurveColorB, lineLife);
        for(int t = 0; t < DRAW_SAMPLE; t ++){
            glBegin(GL_LINES);
        a = line_X;
        b = line_Y;
                glVertex2f(xx(t),yy(t));
                glVertex2f(xx((t+1)%DRAW_SAMPLE),yy((t+1)%DRAW_SAMPLE));
            glEnd();
        }

        line_X += 0.005;
        line_Y += 0.005;

        lineLife -= 0.02;
    }

    // Curve
    a = cursorX;
    b = cursorY;

    glLineWidth(2.0);
    glColor4f(curveColorR, curveColorG, curveColorB, 255);
    for(int t = 0; t < DRAW_SAMPLE; t ++){
        glBegin(GL_LINES);
            a = la;
            b = lb;
            glVertex2f(xx(t),yy(t));
            glVertex2f(xx((t+1)%DRAW_SAMPLE),yy((t+1)%DRAW_SAMPLE));
        glEnd();
    }

/*
    glLineWidth(8.0);
    glColor4ub(0, 255, 0, 10);
    for(double t = -M_PI; t < M_PI; t += delta){
        glBegin(GL_LINES);
            a = la;
            b = lb;
            glVertex2f(xx(t),yy(t));
            glVertex2f(xx(t+delta),yy(t+delta));
        glEnd();
    }*/


    // V(n+1) = ( V(n) - V(n-1) ) * k + V(n-1)
    la = (cursorX - la)/8 + la;
    lb = (cursorY - lb)/8 + lb;

    //Osciloscope grid
    glLineWidth(1.7);
    glColor4ub(0, 0, 0, 100);
    glBegin(GL_LINES);
        glVertex2f(-1,0);
        glVertex2f(1,0);
        glVertex2f(0,-1);
        glVertex2f(0,1);
    glEnd();
    glLineWidth(0.7);
    for(double i = -1; i < 1; i+= .05){
        glBegin(GL_LINES);
            glVertex2f(-0.01,i);
            glVertex2f(0.01,i);
            glVertex2f(i,-0.01);
            glVertex2f(i,0.01);
        glEnd();
    }
    for(double i = -1; i < 1; i+= .25){
        glBegin(GL_LINES);
            glVertex2f(-1,i);
            glVertex2f(1,i);
            glVertex2f(i,-1);
            glVertex2f(i,1);
        glEnd();
    }

/*
    glClear(GL_ACCUM_BUFFER_BIT);
    glAccum(GL_ACCUM, 1.0);
    glAccum(GL_RETURN,1.0);*/

}
